package com.hrs.gatewayserver;

import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;
import org.springframework.cloud.gateway.route.RouteLocator;
import org.springframework.cloud.gateway.route.builder.RouteLocatorBuilder;
import org.springframework.cloud.netflix.eureka.EnableEurekaClient;
import org.springframework.context.annotation.Bean;

@SpringBootApplication
@EnableEurekaClient
public class SpringCloudGatewayServerApplication {

	public static void main(String[] args) {
		SpringApplication.run(SpringCloudGatewayServerApplication.class, args);
	}

	@Bean
	  public RouteLocator myRoutes(RouteLocatorBuilder builder) {
		System.out.println("********************************************calling through API gateway server***************************************************");
	    return builder.routes()
	      .route(p -> p
	        .path("/userService")
//	        .filters(f -> f.addRequestHeader("Hello", "World"))
	        .uri("http://USER-SERVICE"))
	      .route(p -> p
	        .path("/subscriptionService")
	        .filters(f -> f
	          .hystrix(config -> config
	            .setName("subscriptionService")
	            .setFallbackUri("forward:/fallback")))
	        .uri("http://SUBSCRIPTION-SERVICE"))
	      .build();
	  }
//
//	  @RequestMapping("/fallback")
//	  public Mono<String> fallback() {
//	    return Mono.just("fallback");
//	  }
}
