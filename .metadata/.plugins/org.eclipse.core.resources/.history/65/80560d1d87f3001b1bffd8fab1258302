package com.hrs.usersubscription.services;

import java.util.Date;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.util.StringUtils;

import com.hrs.userservice.entity.User;
import com.hrs.userservice.payload.UserPayload;
import com.hrs.userservice.repository.UserRepository;
import com.hrs.usersubscription.entity.Subscription;
import com.hrs.usersubscription.payload.SubscriptionPayload;

@Service
public class SubscriptionServiceImpl implements SubscriptionService {

	@Autowired
	protected SubscriptionRepository subscriptionRepository;

	@Override
	public SubscriptionPayload createSubscription(SubscriptionPayload subscriptionPayload) {
		if(StringUtils.hasLength(subscriptionPayload.getId()) || StringUtils.hasLength(subscriptionPayload.getUserId()) || subscriptionPayload.getExpiryDate() > subscriptionPayload.getCreatedDate()) {
			subscriptionPayload.setCreatedDate(new Date());
			subscriptionPayload.setExpiryDate(new Date(2022,11,31));
			subscriptionPayload = subscriptionRepository.save(subscriptionPayload.mapToSubscription()).;
		} else {
			throw new IllegalArgumentException("Invalid Data!");
		}
		
		return subscriptionPayload;
	}

	@Override
	public SubscriptionPayload getSubscription(String id) {
		SubscriptionPayload subscriptionPayload = null;
		if (StringUtils.hasLength(id)) {
			Optional<Subscription> subscription = subscriptionRepository.findById(id);
			
			if(subscription.isPresent()) {
				Subscription existingSubscription = subscription.get();
				subscriptionPayload = new SubscriptionPayload(existingSubscription.getId(), existingSubscription.getUserId(), existingSubscription.getCreatedDate(), existingSubscription.getExpiryDate());
			} else {
				throw new IllegalArgumentException("Subscription does not Exist");
			}
		} else {
			throw new IllegalArgumentException("Invalid Data!");
		}
		return subscriptionPayload;
	}


	@Override
	public Boolean deleteSubscription(String id) {
		if(StringUtils.hasLength(id)) {
			subscriptionRepository.deleteById(id);
		} else {
			throw new IllegalArgumentException("Subscription does not Exist");
		}
		return true;
	}
}
